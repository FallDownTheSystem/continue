name: Publish Preview Extension

on:
  create:
    tags:
      - "v0.9.*-vscode"
    branches:
      - code-chunk

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            npm_config_arch: x64
    runs-on: ${{ matrix.os }}
    steps:
      # 1. Check-out repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # This ensures all tags are fetched

      - name: Checkout tag
        run: git checkout ${GITHUB_REF#refs/tags/}

      # 2. Install npm dependencies
      - name: Use Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Cache extension node_modules
        uses: actions/cache@v3
        with:
          path: extensions/vscode/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('extensions/vscode/package-lock.json') }}

      - name: Cache core node_modules
        uses: actions/cache@v3
        with:
          path: core/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('core/package-lock.json') }}

      - name: Cache gui node_modules
        uses: actions/cache@v3
        with:
          path: gui/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('gui/package-lock.json') }}

      - name: Install extension Dependencies
        run: |
          cd extensions/vscode
          npm ci
        env:
          # https://github.com/microsoft/vscode-ripgrep/issues/9#issuecomment-643965333
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install gui Dependencies
        run: |
          cd gui
          npm ci

      - name: Install Core Dependencies
        run: |
          cd core
          npm ci

      # 2.5. Pre package
      - name: Set var for environment info
        shell: pwsh
        run: echo "target=${{ matrix.platform }}-${{ matrix.arch }}" >> $env:GITHUB_ENV

      - name: Prepackage the extension
        run: |
          cd extensions/vscode
          npm run prepackage -- --target ${{ env.target }}


      # 3. Re-install esbuild (for cases that we force installed for another arch in prepackage.js)
      - name: Re-install esbuild
        run: |
          cd extensions/vscode
          npm install -f esbuild

      # 4. Package the extension
      - name: Package the extension
        run: cd extensions/vscode && npx vsce package --pre-release --no-dependencies --target ${{ env.target }}

      # 5. Upload the .vsix as an artifact
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.target }}
          path: "extensions/vscode/*.vsix"

  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      # Download the .vsix artifacts
      - uses: actions/download-artifact@v3

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            win32-x64/*.vsix
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: FallDownTheSystem/continue
          prerelease: true

  # publish:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - build
  #   permissions:
  #     contents: write
  #   steps:
  #     # 0. Setup git
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Set up Git
  #       run: |
  #         git config --local user.email "action@github.com"
  #         git config --local user.name "GitHub Action"

  #     - name: Pull latest changes
  #       run: git pull origin dev

  #     # 1. Download the artifacts
  #     - uses: actions/download-artifact@v3

  #     # 2. Publish the extension to VS Code Marketplace
  #     - name: Publish to VS Code Marketplace
  #       run: |
  #         cd extensions/vscode
  #         npx vsce publish --pre-release --packagePath ../../win32-x64/*.vsix
  #       env:
  #         VSCE_PAT: ${{ secrets.VSCE_TOKEN }}

  #     # 3. Publish the extension to Open VSX Registry
  #     - name: Publish (Open VSX Registry)
  #       continue-on-error: true
  #       run: |
  #         cd extensions/vscode
  #         npx ovsx publish --pre-release -p ${{ secrets.VSX_REGISTRY_TOKEN }} --packagePath ../../alpine-x64/*.vsix ../../darwin-arm64/*.vsix ../../darwin-x64/*.vsix ../../linux-arm64/*.vsix ../../linux-armhf/*.vsix ../../linux-x64/*.vsix ../../win32-x64/*.vsix ../../win32-arm64/*.vsix
